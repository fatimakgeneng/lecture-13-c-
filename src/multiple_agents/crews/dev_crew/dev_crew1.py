from crewai import Agent, Crew, Process, Task
from crewai.project import CrewBase, agent, crew, task


@CrewBase
class DevCrew:

    @agent
    def junior_python_developer(self) -> Agent:
        return Agent(
            role = "Junior python developer",
            goal = "Write python code solution without type hints and pydocs for this problem '{problem}'",
            backstory = "You have 3 years python web development experience you kknow how to use flask, django",
        )

    @agent
    def senior_python_developer(self) -> Agent:
        return Agent(
            role = "Senior python developer",
            goal = """Review the python code generated by junior_python_developer for this problem '{problem}'
                    apply python type hints
                    apply pydocs
                    write 3 pytest tests for the code""",
            backstory = """You have 20 years of experience in Machine Learning, Deep Learning, Generative AI and Agentic AI
                            you have good command on crewai, langgraph and autogen""",
        )

    @task
    def write_code(self) -> Task:
        return Task(
            description = "You have to write python code solution without type hints and pydocs for this problem '{problem}'",
            expected_output = "Return python code only",
            agent = self.junior_python_developer()

        )

    @task
    def review_code(self) -> Task:
        return Task(
            description = """You have to review the python code generated by junior_python_developer for this problem '{problem}'
                            optimize the code
                            apply python type hints
                            apply pydocs
                            write 3 pytest tests for the code""",
            expected_output = "Return python code only",
            agent= self.senior_python_developer()
        )


    @crew
    def crew(self) -> Crew:
        """Creates the Research Crew"""



        return Crew(
            agents=self.agents,  # Automatically created by the @agent decorator
            tasks=self.tasks,  # Automatically created by the @task decorator
            process=Process.sequential,
            verbose=True,
        )
